version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: shortener
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - internal_net

  adminer:
    image: adminer
    ports:
      - "9999:8080"
    networks:
      - internal_net

  migrator:
    restart: on-failure
    build:
      context: ./migrator
      dockerfile: Dockerfile
    environment:
      POSTGRES_URL: postgres://postgres:postgres@postgres:5432/shortener?sslmode=disable
    depends_on:
      - postgres
    networks:
      - internal_net
    volumes:
      - migrations_scripts:/app/migrations

  kafka:
    image: bitnami/kafka:3.7.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=S40B8iVtR0umuTyuM1eLjA
      - KAFKA_CFG_NODE_ID=1
    volumes:
      - kafka_data:/bitnami/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    ports:
      - "9998:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_NAME=kraft
      - DYNAMIC_CONFIG_ENABLED=true

networks:
  internal_net:

volumes:
  postgres_data:
  kafka_data:
  migrations_scripts:

